namespace: 'rewards-[JIRA_ID]'

app_name: 'rewards-[JIRA_ID]'
environment: 'qa'

databaseType: 'postgres'

service:
  name: 'rewards-[JIRA_ID]-database'
  default:
    port: 5432
    protocol: 'TCP'
    targetPort: 5432
  lb:
    enabled: '[APP_DB_LB_DEPLOY]'
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"
      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "TCP"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "5432"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
      service.beta.kubernetes.io/aws-load-balancer-subnets: "ygg-qa-private-me-central-1a, ygg-qa-private-me-central-1b, ygg-qa-private-me-central-1c"

statefulset:
  name: 'rewards-[JIRA_ID]-database-statefulset'
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80

enableHPA: false

enableKedaCron: true
keda:
  name: 'rewards-[JIRA_ID]-database-keda'
  minReplicas: 0
  desiredReplicas: 1
  maxReplicas: 1
  start: "0 7 * * 1-5"
  end: "0 22 * * 1-5"
  cpu: 80

pdb:
  name: 'rewards-[JIRA_ID]-database-pdb'
  minAvailable: 100%

deployment:
  name: 'rewards-[JIRA_ID]-database-deployment'
  replicas: 1

  containers:
    default:
      name: 'database'
      imagePullPolicy: 'Always'
      image: '420360167813.dkr.ecr.me-central-1.amazonaws.com/qa/ygg/rewards/database:latest'
      command: '[]'
      env:
        - name: 'POSTGRES_PASSWORD_FILE'
          value: '/run/entrypoint/secrets/postgres-root-password'
        - name: 'POSTGRES_DB_FILE'
          value: '/run/entrypoint/secrets/postgres-database-name'
        - name: 'POSTGRES_USER_FILE'
          value: '/run/entrypoint/secrets/postgres-database-user'
      port: 5432
      memory:
        requests: 270Mi
        limits: 351Mi
      cpu:
        requests: 130m
        limits: 169m
      livenessProbe:
        command: '["pg_isready"]'
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
      readinessProbe:
        command: '["pg_isready"]'
        initialDelaySeconds: 5
        periodSeconds: 2
        timeoutSeconds: 1

  volumes:
    persistent:
      - name: 'ygag-rewards-[JIRA_ID]-qa-database-data'
        mountPath: '/var/lib/postgresql/data'
        persistentVolumeClaim: 'rewards-[JIRA_ID]-ebs-database'

  initContainers:
    ebs:
      - image: '420360167813.dkr.ecr.me-central-1.amazonaws.com/qa/k8s/busybox:latest'
        volume: 'ygag-rewards-[JIRA_ID]-qa-database-data'
        name: 'init-ebs'

  nodeSelector:
    key: 'karpenter.sh/nodepool'
    value: 'database'
  priorityClassName: 'qa-critical'
  terminationGracePeriodSeconds: 30

