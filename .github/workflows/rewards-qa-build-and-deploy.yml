name: QA Build & Deploy rewards
run-name: Deploying QA Branch ${{ inputs.branch }}

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
        type: string
      unit_test:
        description: 'Unit Test'
        required: true
        default: 'false'
        type: choice
        options:
        - false
        - true
      app_db_lb_deploy:
        description: 'Quick sight DB expose'
        required: true
        default: 'false'
        type: choice
        options:
        - false
        - true
      rebuild_req:
        description: 'Force reinstall requirement'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true
      deploy_env:
        description: 'Deploy Env'
        required: true
        default: 'qa'
        type: choice
        options:
        - qa
      app_cron_deploy:
        description: 'Should deploy cron?'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false
      debug:
        description: 'Debug'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true

      run_collectstatic:
        description: 'should run collectstatic'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false

      run_migration:
        description: 'should run migration'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false


  repository_dispatch:
    types: [ "QA Build & Deploy rewards" ]
    inputs:
      branch:
        description: 'Branch Name'
        required: true
        type: string
      action:
        description: 'Deployment action'
        required: true
        default: 'deploy'
        type: choice
        options:
        - deploy
        - renew
        - destroy

      unit_test:
        description: 'Unit Test'
        required: true
        default: 'false'
        type: choice
        options:
        - false
        - true
      app_db_lb_deploy:
        description: 'Quick sight DB expose'
        required: true
        default: 'false'
        type: choice
        options:
        - false
      rebuild_req:
        description: 'Force reinstall requirement'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true
      deploy_env:
        description: 'Deploy Env'
        required: true
        default: 'qa'
        type: choice
        options:
        - qa
      app_cron_deploy:
        description: 'Should deploy cron?'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false
      debug:
        description: 'Debug'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true



env:
  APPLICATION_NAME: rewards
  APP_NAME: rewards
  APP_IMAGE_REPOSITORY: 'qa/ygg/rewards/backend-app'
  NGINX_IMAGE_REPOSITORY: 'qa/ygg/rewards/backend-nginx'
  ECR_REGISTRY: '420360167813'
  ECR_REGION: 'me-central-1'
  VAULT_ADDRESS: ${{ secrets.VAULT_ADDRESS }}
  PRODUCT_TEAM: rewards
  ACTION: deploy
  JIRA_ID: ${{ inputs.branch || github.event.client_payload.branch }}
  UNIT_TEST: ${{ inputs.unit_test || github.event.client_payload.unit_test || false }}
  APP_DB_LB_DEPLOY: ${{ inputs.app_db_lb_deploy || github.event.client_payload.app_db_lb_deploy || false }}
  APP_CRON_DEPLOY: ${{ inputs.app_cron_deploy || github.event.client_payload.app_cron_deploy || false }}
  QA_DEPLOY_ENV: ${{ inputs.deploy_env || github.event.client_payload.deploy_env || 'qa' }}
  DEBUG: ${{ inputs.debug || github.event.client_payload.debug || false }}
  NGINX_BASE_IMAGE: '420360167813.dkr.ecr.me-central-1.amazonaws.com/qa/ygg/nginx:1.16.1-1'
  COLLECTSTATIC_RUN: ${{ inputs.run_collectstatic || github.event.client_payload.run_collectstatic || true }}
  MIGRATION_RUN: ${{ inputs.run_migration || github.event.client_payload.run_migration || true }}

jobs:

  deploy-app-nginx:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
     - name: Checkout Code for deploy
       uses: actions/checkout@v3.0.2
       with:
         ref: ${{ inputs.branch || github.event.client_payload.branch }}

     - name: Search and replace values
       run: |
        mkdir -p build/${{ env.APP_NAME }}
        cp deployment/values/${{ env.APP_NAME }}/qa/terraform/* build/${{ env.APP_NAME }}
        

        find ./ -type f -exec sed -i 's!\[COLLECTSTATIC_RUN\]!${{ env.COLLECTSTATIC_RUN }}!g' '{}' \;
        find ./ -type f -exec sed -i 's!\[MIGRATION_RUN\]!${{ env.MIGRATION_RUN }}!g' '{}' \; 
         
        cd build/${{ env.APP_NAME }}/ > /dev/null

        find ./ -type f -exec sed -i "s/\[JIRA_ID\]/${{needs.initialize.outputs.jira_id}}/g" {} \;

        if [[ ${{ env.ACTION }} == "destroy" ]] ; then
          sed -i "s/\[APP_DEPLOY\]/false/g" *.auto.tfvars
        else
          sed -i "s/\[APP_DEPLOY\]/true/g" *.auto.tfvars
        fi

        if [[ ${{ env.UNIT_TEST }} == "true" ]] ; then
          sed -i "s/\[APP_UNIT_TEST_DEPLOY\]/true/g" *.auto.tfvars
        else
          sed -i "s/\[APP_UNIT_TEST_DEPLOY\]/false/g" *.auto.tfvars
        fi

        if [[ ${{ env.APP_DB_LB_DEPLOY }} == "true" ]] ; then
          sed -i "s/\[APP_DB_LB_DEPLOY\]/true/g" *.auto.tfvars *.yaml
        else
          sed -i "s/\[APP_DB_LB_DEPLOY\]/false/g" *.auto.tfvars *.yaml
        fi

        if [[ ${{ env.QA_DEPLOY_ENV }} == "automation" ]] ; then
          sed -i "s/\[QA_DEPLOY_ENV\]/automation/g" *.yaml
        else
          sed -i "s/\[QA_DEPLOY_ENV\]/qa/g" *.yaml
        fi

        if [[ ${{ env.APP_CRON_DEPLOY }} == "true" ]] ; then
          sed -i "s/\[APP_CRON_DEPLOY\]/true/g" *.auto.tfvars
        else
          sed -i "s/\[APP_CRON_DEPLOY\]/false/g" *.auto.tfvars
        fi
         
        pwd 
        cat terraform.auto.tfvars
         

         

